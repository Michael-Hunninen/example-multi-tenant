/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    tenants: Tenant;
    domains: Domain;
    _branding_: _Branding_;
    pages: Page;
    media: Media;
    posts: Post;
    categories: Category;
    headers: Header;
    footers: Footer;
    videos: Video;
    programs: Program;
    enrollments: Enrollment;
    'video-progress': VideoProgress;
    comments: Comment;
    achievements: Achievement;
    'user-achievements': UserAchievement;
    notifications: Notification;
    products: Product;
    subscriptions: Subscription;
    transactions: Transaction;
    customers: Customer;
    forms: Form;
    'form-submissions': FormSubmission;
    redirects: Redirect;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    tenants: TenantsSelect<false> | TenantsSelect<true>;
    domains: DomainsSelect<false> | DomainsSelect<true>;
    _branding_: _Branding_Select<false> | _Branding_Select<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    headers: HeadersSelect<false> | HeadersSelect<true>;
    footers: FootersSelect<false> | FootersSelect<true>;
    videos: VideosSelect<false> | VideosSelect<true>;
    programs: ProgramsSelect<false> | ProgramsSelect<true>;
    enrollments: EnrollmentsSelect<false> | EnrollmentsSelect<true>;
    'video-progress': VideoProgressSelect<false> | VideoProgressSelect<true>;
    comments: CommentsSelect<false> | CommentsSelect<true>;
    achievements: AchievementsSelect<false> | AchievementsSelect<true>;
    'user-achievements': UserAchievementsSelect<false> | UserAchievementsSelect<true>;
    notifications: NotificationsSelect<false> | NotificationsSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    subscriptions: SubscriptionsSelect<false> | SubscriptionsSelect<true>;
    transactions: TransactionsSelect<false> | TransactionsSelect<true>;
    customers: CustomersSelect<false> | CustomersSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  roles?: ('super-admin' | 'admin' | 'business' | 'regular')[] | null;
  username?: string | null;
  tenants?:
    | {
        tenant: string | Tenant;
        roles: ('tenant-admin' | 'tenant-viewer')[];
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tenants".
 */
export interface Tenant {
  id: string;
  name: string;
  /**
   * Used for URL paths and identification (e.g., agency-owner, bronze-tenant)
   */
  slug: string;
  /**
   * Mark this tenant as the agency owner (system default). Only one should exist.
   */
  isAgencyOwner?: boolean | null;
  /**
   * Internal description of this tenant
   */
  description?: string | null;
  status: 'active' | 'inactive' | 'suspended';
  /**
   * If checked, logging in is not required to read. Useful for building public pages.
   */
  allowPublicRead?: boolean | null;
  settings?: {
    /**
     * Maximum number of users allowed for this tenant (0 = unlimited)
     */
    maxUsers?: number | null;
    /**
     * Maximum number of pages allowed for this tenant (0 = unlimited)
     */
    maxPages?: number | null;
  };
  /**
   * Stripe payment processing configuration for this tenant
   */
  stripe?: {
    enabled?: boolean | null;
    /**
     * Secret key from Stripe dashboard (starts with sk_)
     */
    secretKey?: string | null;
    /**
     * Publishable key from Stripe dashboard (starts with pk_)
     */
    publishableKey?: string | null;
    /**
     * Webhook signing secret from Stripe dashboard (starts with whsec_)
     */
    webhookSecret?: string | null;
    /**
     * Use Stripe test mode (keys should start with pk_test_ and sk_test_)
     */
    isTestMode?: boolean | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "domains".
 */
export interface Domain {
  id: string;
  tenant?: (string | null) | Tenant;
  /**
   * Full domain (e.g., example.com, tenant.yourdomain.com, localhost:3000)
   */
  domain: string;
  /**
   * Check if this is the root domain (e.g., yourdomain.com)
   */
  isRootDomain?: boolean | null;
  /**
   * Choose what type of landing page to show for this domain
   */
  landingPageType?: ('default' | 'page' | 'custom-homepage') | null;
  /**
   * Enable custom pages (About, Services, Pricing, Contact) for this domain. When enabled, the main site header, footer, and admin bar will be hidden.
   */
  enableCustomPages?: boolean | null;
  /**
   * The page to show when visiting this domain
   */
  landingPage?: (string | null) | Page;
  /**
   * Whether this domain mapping is active
   */
  isActive?: boolean | null;
  /**
   * Mark as the primary domain for this tenant (only one per tenant)
   */
  isDefault?: boolean | null;
  /**
   * Optional: Redirect this domain to another URL
   */
  redirectTo?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  tenant?: (string | null) | Tenant;
  title: string;
  hero: {
    type: 'none' | 'highImpact' | 'mediumImpact' | 'lowImpact';
    richText?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?: {
              relationTo: 'pages';
              value: string | Page;
            } | null;
            url?: string | null;
            label: string;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline') | null;
          };
          id?: string | null;
        }[]
      | null;
    media?: (string | null) | Media;
  };
  layout: (
    | CallToActionBlock
    | ContentBlock
    | MediaBlock
    | ArchiveBlock
    | FormBlock
    | TrainerProfileBlock
    | HorseShowcaseBlock
    | TrainingServicesBlock
    | TestimonialsBlock
    | EventsBlock
    | LMSHeroBlock
    | VideoPlayerBlock
    | CourseGridBlock
    | DashboardLayoutBlock
  )[];
  meta?: {
    title?: string | null;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  tenant?: (string | null) | Tenant;
  alt?: string | null;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock".
 */
export interface CallToActionBlock {
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  links?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?: {
            relationTo: 'pages';
            value: string | Page;
          } | null;
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  columns?:
    | {
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        richText?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        enableLink?: boolean | null;
        link?: {
          label: string;
          type?: ('page' | 'custom') | null;
          page?: (string | null) | Page;
          url?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: string | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock".
 */
export interface ArchiveBlock {
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  populateBy?: ('collection' | 'selection') | null;
  relationTo?: 'posts' | null;
  categories?: (string | Category)[] | null;
  limit?: number | null;
  selectedDocs?:
    | {
        relationTo: 'posts';
        value: string | Post;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'archive';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: string;
  tenant?: (string | null) | Tenant;
  title: string;
  slug?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: string;
  tenant?: (string | null) | Tenant;
  title: string;
  heroImage?: (string | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedPosts?: (string | Post)[] | null;
  categories?: (string | Category)[] | null;
  meta?: {
    title?: string | null;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (string | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock".
 */
export interface FormBlock {
  form: string | Form;
  enableIntro?: boolean | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'formBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: string;
  tenant?: (string | null) | Tenant;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TrainerProfileBlock".
 */
export interface TrainerProfileBlock {
  name: string;
  title?: string | null;
  image?: (string | null) | Media;
  bio?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  achievements?:
    | {
        achievement: string;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'trainerProfileBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HorseShowcaseBlock".
 */
export interface HorseShowcaseBlock {
  title: string;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  horses?:
    | {
        name: string;
        breed?: string | null;
        age?: string | null;
        color?: string | null;
        image?: (string | null) | Media;
        description?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        price?: string | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'horseShowcaseBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TrainingServicesBlock".
 */
export interface TrainingServicesBlock {
  title: string;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  services?:
    | {
        name: string;
        image?: (string | null) | Media;
        description?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        price?: string | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'trainingServicesBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TestimonialsBlock".
 */
export interface TestimonialsBlock {
  title: string;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  layout: 'grid' | 'carousel';
  testimonials?:
    | {
        author: string;
        location?: string | null;
        image?: (string | null) | Media;
        rating?: number | null;
        text: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'testimonialsBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "EventsBlock".
 */
export interface EventsBlock {
  title: string;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  displayStyle: 'list' | 'grid' | 'calendar';
  events?:
    | {
        name: string;
        date: string;
        endDate?: string | null;
        location?: string | null;
        image?: (string | null) | Media;
        description?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        link?: {
          url?: string | null;
          label?: string | null;
          newTab?: boolean | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'eventsBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LMSHeroBlock".
 */
export interface LMSHeroBlock {
  type: 'default' | 'dashboard' | 'course';
  title: string;
  subtitle?: string | null;
  backgroundImage?: (string | null) | Media;
  primaryButton?: {
    text?: string | null;
    url?: string | null;
    style?: ('primary' | 'secondary' | 'outline') | null;
  };
  secondaryButton?: {
    text?: string | null;
    url?: string | null;
    style?: ('primary' | 'secondary' | 'outline') | null;
  };
  features?:
    | {
        /**
         * Lucide icon name (e.g., "award", "users", "book-open")
         */
        icon?: string | null;
        title: string;
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'lmsHero';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "VideoPlayerBlock".
 */
export interface VideoPlayerBlock {
  title: string;
  description?: string | null;
  videoType: 'upload' | 'youtube' | 'vimeo' | 'url';
  videoFile?: (string | null) | Media;
  videoUrl?: string | null;
  /**
   * Custom thumbnail image (optional)
   */
  thumbnail?: (string | null) | Media;
  /**
   * Video duration (e.g., "5:30")
   */
  duration?: string | null;
  /**
   * Require user authentication to view this video
   */
  requiresAuth?: boolean | null;
  /**
   * Which user roles can access this video
   */
  allowedRoles?: ('regular' | 'business' | 'admin' | 'super-admin')[] | null;
  autoplay?: boolean | null;
  controls?: boolean | null;
  muted?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'videoPlayer';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CourseGridBlock".
 */
export interface CourseGridBlock {
  title: string;
  subtitle?: string | null;
  courses?:
    | {
        title: string;
        description?: string | null;
        image?: (string | null) | Media;
        /**
         * Course duration (e.g., "4 weeks", "12 lessons")
         */
        duration?: string | null;
        level?: ('beginner' | 'intermediate' | 'advanced' | 'all') | null;
        /**
         * Course price (e.g., "$99", "Free")
         */
        price?: string | null;
        url: string;
        featured?: boolean | null;
        requiresAuth?: boolean | null;
        allowedRoles?: ('basic' | 'premium' | 'vip')[] | null;
        tags?:
          | {
              tag?: string | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  displayStyle?: ('grid' | 'list' | 'carousel') | null;
  /**
   * Show level and category filters
   */
  showFilters?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'courseGrid';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "DashboardLayoutBlock".
 */
export interface DashboardLayoutBlock {
  title: string;
  subtitle?: string | null;
  showWelcomeMessage?: boolean | null;
  welcomeMessage?: string | null;
  quickStats?:
    | {
        label: string;
        value: string;
        /**
         * Lucide icon name
         */
        icon?: string | null;
        color?: ('teal' | 'blue' | 'green' | 'yellow' | 'red' | 'purple') | null;
        id?: string | null;
      }[]
    | null;
  recentActivity?:
    | {
        title: string;
        description?: string | null;
        /**
         * Relative time (e.g., "2 hours ago")
         */
        timestamp?: string | null;
        type?: ('video' | 'course' | 'achievement' | 'assignment') | null;
        url?: string | null;
        id?: string | null;
      }[]
    | null;
  quickActions?:
    | {
        title: string;
        description?: string | null;
        url: string;
        /**
         * Lucide icon name
         */
        icon?: string | null;
        color?: ('teal' | 'blue' | 'green' | 'yellow' | 'red' | 'purple') | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Require user authentication to view dashboard
   */
  requiresAuth?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'dashboardLayout';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "_branding_".
 */
export interface _Branding_ {
  id: string;
  tenant?: (string | null) | Tenant;
  name: string;
  logo: string | Media;
  icon: string | Media;
  favicon: string | Media;
  ogImage: string | Media;
  titleSuffix: string;
  metaDescription?: string | null;
  ogDescription?: string | null;
  ogTitle?: string | null;
  primaryColor?: string | null;
  accentColor?: string | null;
  headerBackgroundColor?: string | null;
  headerTextColor?: string | null;
  headerLinks?:
    | {
        label: string;
        url: string;
        id?: string | null;
      }[]
    | null;
  footerBackgroundColor?: string | null;
  footerTextColor?: string | null;
  footerLinkColor?: string | null;
  copyrightText?: string | null;
  footerLinks?:
    | {
        label: string;
        url: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "headers".
 */
export interface Header {
  id: string;
  tenant?: (string | null) | Tenant;
  name: string;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?: {
            relationTo: 'pages';
            value: string | Page;
          } | null;
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footers".
 */
export interface Footer {
  id: string;
  tenant?: (string | null) | Tenant;
  name: string;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?: {
            relationTo: 'pages';
            value: string | Page;
          } | null;
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "videos".
 */
export interface Video {
  id: string;
  tenant?: (string | null) | Tenant;
  /**
   * The title of the video
   */
  title: string;
  /**
   * URL-friendly version of the title
   */
  slug: string;
  /**
   * Detailed description of the video content
   */
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Video thumbnail image
   */
  thumbnail?: (string | null) | Media;
  /**
   * The video file
   */
  videoFile?: (string | null) | Media;
  /**
   * External video URL (YouTube, Vimeo, etc.)
   */
  videoUrl?: string | null;
  /**
   * Video duration in seconds
   */
  duration?: number | null;
  /**
   * Video category
   */
  category?: (string | null) | Category;
  /**
   * Tags for better searchability
   */
  tags?:
    | {
        tag?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Video chapters for navigation
   */
  chapters?:
    | {
        title: string;
        /**
         * Start time in seconds
         */
        startTime: number;
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Video instructor
   */
  instructor?: (string | null) | User;
  difficulty?: ('beginner' | 'intermediate' | 'advanced') | null;
  status?: ('draft' | 'published' | 'archived') | null;
  /**
   * Feature this video on the dashboard
   */
  featured?: boolean | null;
  /**
   * Required access level to view this video
   */
  accessLevel?: ('free' | 'basic' | 'premium' | 'vip') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "programs".
 */
export interface Program {
  id: string;
  tenant?: (string | null) | Tenant;
  /**
   * The title of the program
   */
  title: string;
  /**
   * URL-friendly version of the title
   */
  slug: string;
  /**
   * Detailed description of the program
   */
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Brief description for cards and previews
   */
  shortDescription?: string | null;
  /**
   * Program thumbnail image
   */
  thumbnail?: (string | null) | Media;
  /**
   * Program instructor
   */
  instructor: string | User;
  /**
   * Program category
   */
  category?: (string | null) | Category;
  /**
   * Program lessons in order
   */
  lessons?:
    | {
        title: string;
        description?: string | null;
        video?: (string | null) | Video;
        /**
         * Lesson duration in minutes
         */
        duration?: number | null;
        /**
         * Lesson order within the program
         */
        order: number;
        /**
         * Allow free preview of this lesson
         */
        isPreview?: boolean | null;
        id?: string | null;
      }[]
    | null;
  difficulty?: ('beginner' | 'intermediate' | 'advanced') | null;
  /**
   * Total program duration in hours
   */
  duration?: number | null;
  /**
   * Program price (0 for free)
   */
  price?: number | null;
  /**
   * Required access level to enroll in this program
   */
  accessLevel?: ('free' | 'basic' | 'premium' | 'vip') | null;
  status?: ('draft' | 'published' | 'archived') | null;
  /**
   * Feature this program on the dashboard
   */
  featured?: boolean | null;
  /**
   * Maximum number of enrollments (0 for unlimited)
   */
  enrollmentLimit?: number | null;
  /**
   * Tags for better searchability
   */
  tags?:
    | {
        tag?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "enrollments".
 */
export interface Enrollment {
  id: string;
  tenant?: (string | null) | Tenant;
  /**
   * The enrolled user
   */
  user: string | User;
  /**
   * The program the user is enrolled in
   */
  program: string | Program;
  status?: ('active' | 'completed' | 'paused' | 'cancelled') | null;
  /**
   * Completion progress as percentage (0-100)
   */
  progress?: number | null;
  /**
   * Track which lessons have been completed
   */
  completedLessons?:
    | {
        lessonIndex: number;
        completedAt: string;
        /**
         * Time spent on lesson in minutes
         */
        timeSpent?: number | null;
        id?: string | null;
      }[]
    | null;
  /**
   * When the user enrolled in the program
   */
  enrolledAt?: string | null;
  /**
   * When the user completed the program
   */
  completedAt?: string | null;
  /**
   * When the user last accessed the program
   */
  lastAccessedAt?: string | null;
  /**
   * Total time spent in the program (minutes)
   */
  totalTimeSpent?: number | null;
  /**
   * Whether a completion certificate has been issued
   */
  certificateIssued?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "video-progress".
 */
export interface VideoProgress {
  id: string;
  tenant?: (string | null) | Tenant;
  /**
   * The user watching the video
   */
  user: string | User;
  /**
   * The video being watched
   */
  video: string | Video;
  /**
   * Watch progress as percentage (0-100)
   */
  progress?: number | null;
  /**
   * Current playback position in seconds
   */
  currentTime?: number | null;
  /**
   * Total video duration in seconds
   */
  duration?: number | null;
  /**
   * Whether the video has been completed
   */
  completed?: boolean | null;
  /**
   * Total time spent watching this video in seconds
   */
  watchTime?: number | null;
  /**
   * When the video was last watched
   */
  lastWatchedAt?: string | null;
  /**
   * When the video was first watched
   */
  firstWatchedAt?: string | null;
  /**
   * Whether the user has bookmarked this video
   */
  bookmarked?: boolean | null;
  /**
   * Whether the user has liked this video
   */
  liked?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "comments".
 */
export interface Comment {
  id: string;
  tenant?: (string | null) | Tenant;
  /**
   * The user who posted the comment
   */
  user: string | User;
  /**
   * The comment content
   */
  content: string;
  /**
   * The video this comment is on
   */
  video?: (string | null) | Video;
  /**
   * The program this comment is on
   */
  program?: (string | null) | Program;
  /**
   * Parent comment for replies
   */
  parentComment?: (string | null) | Comment;
  /**
   * Video timestamp for the comment (in seconds)
   */
  timestamp?: number | null;
  status?: ('pending' | 'approved' | 'rejected') | null;
  /**
   * Number of likes on this comment
   */
  likes?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "achievements".
 */
export interface Achievement {
  id: string;
  tenant?: (string | null) | Tenant;
  /**
   * Achievement title
   */
  title: string;
  /**
   * Achievement description
   */
  description: string;
  /**
   * Achievement badge/icon
   */
  icon?: (string | null) | Media;
  type: 'video_completion' | 'program_completion' | 'streak' | 'time_spent' | 'first_login' | 'comment' | 'special';
  /**
   * Points awarded for this achievement
   */
  points?: number | null;
  /**
   * Achievement criteria
   */
  criteria?: {
    /**
     * Number of videos to complete (for video completion achievements)
     */
    videosToComplete?: number | null;
    /**
     * Number of programs to complete (for program completion achievements)
     */
    programsToComplete?: number | null;
    /**
     * Number of consecutive days (for streak achievements)
     */
    streakDays?: number | null;
    /**
     * Total hours to spend learning (for time spent achievements)
     */
    timeSpentHours?: number | null;
  };
  status?: ('active' | 'inactive') | null;
  rarity?: ('common' | 'uncommon' | 'rare' | 'epic' | 'legendary') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "user-achievements".
 */
export interface UserAchievement {
  id: string;
  tenant?: (string | null) | Tenant;
  /**
   * The user who earned the achievement
   */
  user: string | User;
  /**
   * The achievement that was earned
   */
  achievement: string | Achievement;
  /**
   * When the achievement was earned
   */
  earnedAt?: string | null;
  /**
   * Progress towards earning this achievement (0-100)
   */
  progress?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "notifications".
 */
export interface Notification {
  id: string;
  tenant?: (string | null) | Tenant;
  user: string | User;
  title: string;
  message: string;
  type: 'achievement' | 'comment' | 'progress' | 'enrollment' | 'live_session' | 'system';
  read?: boolean | null;
  /**
   * URL to navigate to when notification is clicked
   */
  actionUrl?: string | null;
  /**
   * Additional data for the notification (video ID, program ID, etc.)
   */
  metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: string;
  tenant?: (string | null) | Tenant;
  /**
   * Product name displayed to customers
   */
  name: string;
  /**
   * Product description for customers
   */
  description?: string | null;
  type: 'one_time' | 'subscription' | 'course_access' | 'program_bundle';
  /**
   * Multiple pricing options for this product (e.g., monthly and annual)
   */
  prices: {
    /**
     * Price in cents (e.g., 2999 for $29.99)
     */
    amount: number;
    currency: 'usd' | 'eur' | 'gbp';
    /**
     * Billing interval for subscriptions
     */
    interval?: ('month' | 'year' | 'week') | null;
    /**
     * Stripe Price ID for this specific price option
     */
    stripePriceId?: string | null;
    /**
     * Display label for this price (e.g., "Monthly", "Annual")
     */
    label?: string | null;
    id?: string | null;
  }[];
  /**
   * Stripe Product ID (auto-populated)
   */
  stripeProductId?: string | null;
  /**
   * List of product features
   */
  features?:
    | {
        feature: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Access level granted by this product
   */
  accessLevel: 'basic' | 'premium' | 'vip' | 'enterprise';
  /**
   * Programs included with this product
   */
  relatedPrograms?: (string | Program)[] | null;
  /**
   * Videos included with this product
   */
  relatedVideos?: (string | Video)[] | null;
  /**
   * Whether this product is available for purchase
   */
  active?: boolean | null;
  /**
   * Display this product prominently
   */
  featured?: boolean | null;
  /**
   * Product image for display
   */
  image?: (string | null) | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "subscriptions".
 */
export interface Subscription {
  id: string;
  tenant?: (string | null) | Tenant;
  /**
   * User who owns this subscription
   */
  user: string | User;
  /**
   * Product being subscribed to
   */
  product: string | Product;
  /**
   * Stripe Subscription ID (auto-populated when Stripe is connected)
   */
  stripeSubscriptionId?: string | null;
  /**
   * Stripe Customer ID (auto-populated when Stripe is connected)
   */
  stripeCustomerId?: string | null;
  /**
   * Current subscription status from Stripe
   */
  status: 'active' | 'past_due' | 'canceled' | 'unpaid' | 'incomplete' | 'incomplete_expired' | 'trialing' | 'paused';
  /**
   * Start of current billing period
   */
  currentPeriodStart?: string | null;
  /**
   * End of current billing period
   */
  currentPeriodEnd?: string | null;
  /**
   * Whether subscription will cancel at period end
   */
  cancelAtPeriodEnd?: boolean | null;
  /**
   * When subscription was canceled
   */
  canceledAt?: string | null;
  /**
   * Trial period start date
   */
  trialStart?: string | null;
  /**
   * Trial period end date
   */
  trialEnd?: string | null;
  /**
   * Additional metadata from Stripe
   */
  metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "transactions".
 */
export interface Transaction {
  id: string;
  tenant?: (string | null) | Tenant;
  /**
   * User who made this transaction
   */
  user: string | User;
  /**
   * Product purchased (if applicable)
   */
  product?: (string | null) | Product;
  /**
   * Stripe Payment Intent ID
   */
  stripePaymentIntentId?: string | null;
  /**
   * Stripe Charge ID
   */
  stripeChargeId?: string | null;
  /**
   * Stripe Customer ID
   */
  stripeCustomerId?: string | null;
  /**
   * Transaction amount in cents
   */
  amount: number;
  /**
   * Currency code (e.g., usd, eur)
   */
  currency: string;
  /**
   * Transaction status from Stripe
   */
  status: 'pending' | 'succeeded' | 'failed' | 'canceled' | 'refunded' | 'partially_refunded';
  type: 'payment' | 'refund' | 'subscription_payment' | 'setup_fee';
  /**
   * Transaction description
   */
  description?: string | null;
  /**
   * Stripe receipt URL
   */
  receiptUrl?: string | null;
  /**
   * Amount refunded in cents
   */
  refundAmount?: number | null;
  /**
   * Reason for refund
   */
  refundReason?: string | null;
  /**
   * Additional metadata from Stripe
   */
  metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Related subscription (for subscription payments)
   */
  subscription?: (string | null) | Subscription;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customers".
 */
export interface Customer {
  id: string;
  tenant?: (string | null) | Tenant;
  /**
   * Associated user account
   */
  user: string | User;
  /**
   * Stripe Customer ID (auto-populated when Stripe is connected)
   */
  stripeCustomerId?: string | null;
  /**
   * Customer email address
   */
  email: string;
  /**
   * Customer full name
   */
  name?: string | null;
  /**
   * Customer phone number
   */
  phone?: string | null;
  address?: {
    /**
     * Address line 1
     */
    line1?: string | null;
    /**
     * Address line 2
     */
    line2?: string | null;
    /**
     * City
     */
    city?: string | null;
    /**
     * State/Province
     */
    state?: string | null;
    /**
     * Postal/ZIP code
     */
    postalCode?: string | null;
    /**
     * Country
     */
    country?: string | null;
  };
  /**
   * Default Stripe Payment Method ID
   */
  defaultPaymentMethod?: string | null;
  /**
   * Customer balance in cents
   */
  balance?: number | null;
  /**
   * Customer preferred currency
   */
  currency?: string | null;
  /**
   * Additional metadata from Stripe
   */
  metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: string;
  form: string | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: string;
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: string | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: string | Post;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: string;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'tenants';
        value: string | Tenant;
      } | null)
    | ({
        relationTo: 'domains';
        value: string | Domain;
      } | null)
    | ({
        relationTo: '_branding_';
        value: string | _Branding_;
      } | null)
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'posts';
        value: string | Post;
      } | null)
    | ({
        relationTo: 'categories';
        value: string | Category;
      } | null)
    | ({
        relationTo: 'headers';
        value: string | Header;
      } | null)
    | ({
        relationTo: 'footers';
        value: string | Footer;
      } | null)
    | ({
        relationTo: 'videos';
        value: string | Video;
      } | null)
    | ({
        relationTo: 'programs';
        value: string | Program;
      } | null)
    | ({
        relationTo: 'enrollments';
        value: string | Enrollment;
      } | null)
    | ({
        relationTo: 'video-progress';
        value: string | VideoProgress;
      } | null)
    | ({
        relationTo: 'comments';
        value: string | Comment;
      } | null)
    | ({
        relationTo: 'achievements';
        value: string | Achievement;
      } | null)
    | ({
        relationTo: 'user-achievements';
        value: string | UserAchievement;
      } | null)
    | ({
        relationTo: 'notifications';
        value: string | Notification;
      } | null)
    | ({
        relationTo: 'products';
        value: string | Product;
      } | null)
    | ({
        relationTo: 'subscriptions';
        value: string | Subscription;
      } | null)
    | ({
        relationTo: 'transactions';
        value: string | Transaction;
      } | null)
    | ({
        relationTo: 'customers';
        value: string | Customer;
      } | null)
    | ({
        relationTo: 'forms';
        value: string | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: string | FormSubmission;
      } | null)
    | ({
        relationTo: 'redirects';
        value: string | Redirect;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: string | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  roles?: T;
  username?: T;
  tenants?:
    | T
    | {
        tenant?: T;
        roles?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tenants_select".
 */
export interface TenantsSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  isAgencyOwner?: T;
  description?: T;
  status?: T;
  allowPublicRead?: T;
  settings?:
    | T
    | {
        maxUsers?: T;
        maxPages?: T;
      };
  stripe?:
    | T
    | {
        enabled?: T;
        secretKey?: T;
        publishableKey?: T;
        webhookSecret?: T;
        isTestMode?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "domains_select".
 */
export interface DomainsSelect<T extends boolean = true> {
  tenant?: T;
  domain?: T;
  isRootDomain?: T;
  landingPageType?: T;
  enableCustomPages?: T;
  landingPage?: T;
  isActive?: T;
  isDefault?: T;
  redirectTo?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "_branding__select".
 */
export interface _Branding_Select<T extends boolean = true> {
  tenant?: T;
  name?: T;
  logo?: T;
  icon?: T;
  favicon?: T;
  ogImage?: T;
  titleSuffix?: T;
  metaDescription?: T;
  ogDescription?: T;
  ogTitle?: T;
  primaryColor?: T;
  accentColor?: T;
  headerBackgroundColor?: T;
  headerTextColor?: T;
  headerLinks?:
    | T
    | {
        label?: T;
        url?: T;
        id?: T;
      };
  footerBackgroundColor?: T;
  footerTextColor?: T;
  footerLinkColor?: T;
  copyrightText?: T;
  footerLinks?:
    | T
    | {
        label?: T;
        url?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  tenant?: T;
  title?: T;
  hero?:
    | T
    | {
        type?: T;
        richText?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        media?: T;
      };
  layout?:
    | T
    | {
        cta?: T | CallToActionBlockSelect<T>;
        content?: T | ContentBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
        archive?: T | ArchiveBlockSelect<T>;
        formBlock?: T | FormBlockSelect<T>;
        trainerProfileBlock?: T | TrainerProfileBlockSelect<T>;
        horseShowcaseBlock?: T | HorseShowcaseBlockSelect<T>;
        trainingServicesBlock?: T | TrainingServicesBlockSelect<T>;
        testimonialsBlock?: T | TestimonialsBlockSelect<T>;
        eventsBlock?: T | EventsBlockSelect<T>;
        lmsHero?: T | LMSHeroBlockSelect<T>;
        videoPlayer?: T | VideoPlayerBlockSelect<T>;
        courseGrid?: T | CourseGridBlockSelect<T>;
        dashboardLayout?: T | DashboardLayoutBlockSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock_select".
 */
export interface CallToActionBlockSelect<T extends boolean = true> {
  richText?: T;
  links?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock_select".
 */
export interface ContentBlockSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        size?: T;
        richText?: T;
        enableLink?: T;
        link?:
          | T
          | {
              label?: T;
              type?: T;
              page?: T;
              url?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock_select".
 */
export interface MediaBlockSelect<T extends boolean = true> {
  media?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock_select".
 */
export interface ArchiveBlockSelect<T extends boolean = true> {
  introContent?: T;
  populateBy?: T;
  relationTo?: T;
  categories?: T;
  limit?: T;
  selectedDocs?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock_select".
 */
export interface FormBlockSelect<T extends boolean = true> {
  form?: T;
  enableIntro?: T;
  introContent?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TrainerProfileBlock_select".
 */
export interface TrainerProfileBlockSelect<T extends boolean = true> {
  name?: T;
  title?: T;
  image?: T;
  bio?: T;
  achievements?:
    | T
    | {
        achievement?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HorseShowcaseBlock_select".
 */
export interface HorseShowcaseBlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  horses?:
    | T
    | {
        name?: T;
        breed?: T;
        age?: T;
        color?: T;
        image?: T;
        description?: T;
        price?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TrainingServicesBlock_select".
 */
export interface TrainingServicesBlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  services?:
    | T
    | {
        name?: T;
        image?: T;
        description?: T;
        price?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TestimonialsBlock_select".
 */
export interface TestimonialsBlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  layout?: T;
  testimonials?:
    | T
    | {
        author?: T;
        location?: T;
        image?: T;
        rating?: T;
        text?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "EventsBlock_select".
 */
export interface EventsBlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  displayStyle?: T;
  events?:
    | T
    | {
        name?: T;
        date?: T;
        endDate?: T;
        location?: T;
        image?: T;
        description?: T;
        link?:
          | T
          | {
              url?: T;
              label?: T;
              newTab?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LMSHeroBlock_select".
 */
export interface LMSHeroBlockSelect<T extends boolean = true> {
  type?: T;
  title?: T;
  subtitle?: T;
  backgroundImage?: T;
  primaryButton?:
    | T
    | {
        text?: T;
        url?: T;
        style?: T;
      };
  secondaryButton?:
    | T
    | {
        text?: T;
        url?: T;
        style?: T;
      };
  features?:
    | T
    | {
        icon?: T;
        title?: T;
        description?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "VideoPlayerBlock_select".
 */
export interface VideoPlayerBlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  videoType?: T;
  videoFile?: T;
  videoUrl?: T;
  thumbnail?: T;
  duration?: T;
  requiresAuth?: T;
  allowedRoles?: T;
  autoplay?: T;
  controls?: T;
  muted?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CourseGridBlock_select".
 */
export interface CourseGridBlockSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  courses?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
        duration?: T;
        level?: T;
        price?: T;
        url?: T;
        featured?: T;
        requiresAuth?: T;
        allowedRoles?: T;
        tags?:
          | T
          | {
              tag?: T;
              id?: T;
            };
        id?: T;
      };
  displayStyle?: T;
  showFilters?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "DashboardLayoutBlock_select".
 */
export interface DashboardLayoutBlockSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  showWelcomeMessage?: T;
  welcomeMessage?: T;
  quickStats?:
    | T
    | {
        label?: T;
        value?: T;
        icon?: T;
        color?: T;
        id?: T;
      };
  recentActivity?:
    | T
    | {
        title?: T;
        description?: T;
        timestamp?: T;
        type?: T;
        url?: T;
        id?: T;
      };
  quickActions?:
    | T
    | {
        title?: T;
        description?: T;
        url?: T;
        icon?: T;
        color?: T;
        id?: T;
      };
  requiresAuth?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  tenant?: T;
  alt?: T;
  caption?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  tenant?: T;
  title?: T;
  heroImage?: T;
  content?: T;
  relatedPosts?: T;
  categories?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  tenant?: T;
  title?: T;
  slug?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "headers_select".
 */
export interface HeadersSelect<T extends boolean = true> {
  tenant?: T;
  name?: T;
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footers_select".
 */
export interface FootersSelect<T extends boolean = true> {
  tenant?: T;
  name?: T;
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "videos_select".
 */
export interface VideosSelect<T extends boolean = true> {
  tenant?: T;
  title?: T;
  slug?: T;
  description?: T;
  thumbnail?: T;
  videoFile?: T;
  videoUrl?: T;
  duration?: T;
  category?: T;
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  chapters?:
    | T
    | {
        title?: T;
        startTime?: T;
        description?: T;
        id?: T;
      };
  instructor?: T;
  difficulty?: T;
  status?: T;
  featured?: T;
  accessLevel?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "programs_select".
 */
export interface ProgramsSelect<T extends boolean = true> {
  tenant?: T;
  title?: T;
  slug?: T;
  description?: T;
  shortDescription?: T;
  thumbnail?: T;
  instructor?: T;
  category?: T;
  lessons?:
    | T
    | {
        title?: T;
        description?: T;
        video?: T;
        duration?: T;
        order?: T;
        isPreview?: T;
        id?: T;
      };
  difficulty?: T;
  duration?: T;
  price?: T;
  accessLevel?: T;
  status?: T;
  featured?: T;
  enrollmentLimit?: T;
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "enrollments_select".
 */
export interface EnrollmentsSelect<T extends boolean = true> {
  tenant?: T;
  user?: T;
  program?: T;
  status?: T;
  progress?: T;
  completedLessons?:
    | T
    | {
        lessonIndex?: T;
        completedAt?: T;
        timeSpent?: T;
        id?: T;
      };
  enrolledAt?: T;
  completedAt?: T;
  lastAccessedAt?: T;
  totalTimeSpent?: T;
  certificateIssued?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "video-progress_select".
 */
export interface VideoProgressSelect<T extends boolean = true> {
  tenant?: T;
  user?: T;
  video?: T;
  progress?: T;
  currentTime?: T;
  duration?: T;
  completed?: T;
  watchTime?: T;
  lastWatchedAt?: T;
  firstWatchedAt?: T;
  bookmarked?: T;
  liked?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "comments_select".
 */
export interface CommentsSelect<T extends boolean = true> {
  tenant?: T;
  user?: T;
  content?: T;
  video?: T;
  program?: T;
  parentComment?: T;
  timestamp?: T;
  status?: T;
  likes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "achievements_select".
 */
export interface AchievementsSelect<T extends boolean = true> {
  tenant?: T;
  title?: T;
  description?: T;
  icon?: T;
  type?: T;
  points?: T;
  criteria?:
    | T
    | {
        videosToComplete?: T;
        programsToComplete?: T;
        streakDays?: T;
        timeSpentHours?: T;
      };
  status?: T;
  rarity?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "user-achievements_select".
 */
export interface UserAchievementsSelect<T extends boolean = true> {
  tenant?: T;
  user?: T;
  achievement?: T;
  earnedAt?: T;
  progress?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "notifications_select".
 */
export interface NotificationsSelect<T extends boolean = true> {
  tenant?: T;
  user?: T;
  title?: T;
  message?: T;
  type?: T;
  read?: T;
  actionUrl?: T;
  metadata?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  tenant?: T;
  name?: T;
  description?: T;
  type?: T;
  prices?:
    | T
    | {
        amount?: T;
        currency?: T;
        interval?: T;
        stripePriceId?: T;
        label?: T;
        id?: T;
      };
  stripeProductId?: T;
  features?:
    | T
    | {
        feature?: T;
        id?: T;
      };
  accessLevel?: T;
  relatedPrograms?: T;
  relatedVideos?: T;
  active?: T;
  featured?: T;
  image?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "subscriptions_select".
 */
export interface SubscriptionsSelect<T extends boolean = true> {
  tenant?: T;
  user?: T;
  product?: T;
  stripeSubscriptionId?: T;
  stripeCustomerId?: T;
  status?: T;
  currentPeriodStart?: T;
  currentPeriodEnd?: T;
  cancelAtPeriodEnd?: T;
  canceledAt?: T;
  trialStart?: T;
  trialEnd?: T;
  metadata?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "transactions_select".
 */
export interface TransactionsSelect<T extends boolean = true> {
  tenant?: T;
  user?: T;
  product?: T;
  stripePaymentIntentId?: T;
  stripeChargeId?: T;
  stripeCustomerId?: T;
  amount?: T;
  currency?: T;
  status?: T;
  type?: T;
  description?: T;
  receiptUrl?: T;
  refundAmount?: T;
  refundReason?: T;
  metadata?: T;
  subscription?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customers_select".
 */
export interface CustomersSelect<T extends boolean = true> {
  tenant?: T;
  user?: T;
  stripeCustomerId?: T;
  email?: T;
  name?: T;
  phone?: T;
  address?:
    | T
    | {
        line1?: T;
        line2?: T;
        city?: T;
        state?: T;
        postalCode?: T;
        country?: T;
      };
  defaultPaymentMethod?: T;
  balance?: T;
  currency?: T;
  metadata?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  tenant?: T;
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?:
      | ({
          relationTo: 'pages';
          value: string | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: string | Post;
        } | null);
    global?: string | null;
    user?: (string | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}